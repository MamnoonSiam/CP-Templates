<snippet>
	<content><![CDATA[
/*static char buf[450 << 20];
void* operator new(size_t s) {
  static size_t i = sizeof buf;
  return (void*)&buf[i -= s];
}
void operator delete(void*) {}*/

struct Node {
  Node *l = 0, *r = 0;
  int lo, hi;
  ll madd = 0, val = 0;
  Node(int _lo, int _hi):lo(_lo), hi(_hi) {
    if(lo+1 < hi) {
      int mid = lo + (hi - lo) / 2;
      l = new Node(lo, mid);
      r = new Node(mid, hi);
      val = l -> val + r -> val;
    }
    else val = 0;
  }
  ll query(int L, int R) {
    if (R <= lo || hi <= L) return 0;
    if (L <= lo && hi <= R) return val;
    push();
    return l->query(L, R) + r->query(L, R);
  }
  void upd(ll x) {
    val += x * (hi - lo);
    madd += x;
  }
  void add(int L, int R, ll x) {
    if (R <= lo || hi <= L) return;
    if (L <= lo && hi <= R) {
      upd(x);
    }
    else {
      push(), l->add(L, R, x), r->add(L, R, x);
      val = l->val + r->val;
    }
  }
  void push() {
    if(lo + 1 < hi) {
      l -> upd(madd), r -> upd(madd);
    }
    madd = 0;
  }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<!-- <tabTrigger>hello</tabTrigger> -->
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
